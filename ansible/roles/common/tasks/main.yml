---
# Common tasks for all Kubernetes nodes

# Update apt cache and install required packages
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - software-properties-common

# Configure containerd
- name: Create containerd config directory
  file:
    path: /etc/modules-load.d
    state: directory
    mode: '0755'

- name: Enable kernel modules for containerd
  copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/containerd.conf
    mode: '0644'

- name: Load kernel modules
  shell: |
    modprobe overlay
    modprobe br_netfilter

- name: Setup required sysctl params
  copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    mode: '0644'

- name: Apply sysctl params
  command: sysctl --system

# Install containerd
- name: Add Docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Install containerd
  apt:
    name: containerd.io
    state: present

- name: Create containerd configuration directory
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Configure containerd
  shell: containerd config default > /etc/containerd/config.toml

- name: Update containerd config to use systemd cgroup driver
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'

- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
    daemon_reload: yes
    enabled: yes

# Install Kubernetes components
- name: Add Kubernetes apt key
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    state: present

- name: Add Kubernetes repository
  apt_repository:
    repo: "deb https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present

- name: Install Kubernetes components
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - kubelet=1.28.2-1.1
    - kubeadm=1.28.2-1.1
    - kubectl=1.28.2-1.1

- name: Hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl

# Disable swap
- name: Disable swap
  command: swapoff -a

- name: Remove swap from fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

# Setup firewall (optional)
- name: Ensure ufw is installed
  apt:
    name: ufw
    state: present

- name: Allow SSH through firewall
  ufw:
    rule: allow
    name: OpenSSH

- name: Set UFW default policy
  ufw:
    direction: incoming
    policy: deny

- name: Enable UFW
  ufw:
    state: enabled
