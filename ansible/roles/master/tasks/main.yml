---
# Master node specific tasks

# Initialize Kubernetes cluster with kubeadm
- name: Initialize Kubernetes cluster
  shell: >
    kubeadm init 
    --pod-network-cidr=192.168.0.0/16 
    --apiserver-advertise-address={{ ansible_host }}
    --control-plane-endpoint={{ ansible_host }}
  register: kubeadm_init
  args:
    creates: /etc/kubernetes/admin.conf

- name: Store join command for worker nodes
  local_action: copy content="{{ kubeadm_init.stdout_lines | select('match', '.*kubeadm join.*') | list | first }}" dest="/tmp/kubeadm_join_cmd.sh"
  when: kubeadm_init.changed

- name: Create kube directory for ubuntu user
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Copy admin.conf to ubuntu user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Get kubeconfig to fetch locally
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: /tmp/k8s-config
    flat: yes

# Install Calico network plugin
- name: Download Calico manifests
  get_url:
    url: https://docs.projectcalico.org/manifests/calico.yaml
    dest: /tmp/calico.yaml
  become: yes
  become_user: ubuntu

- name: Apply Calico network plugin
  shell: kubectl apply -f /tmp/calico.yaml
  become: yes
  become_user: ubuntu
  register: calico_result
  changed_when: "'configured' in calico_result.stdout or 'created' in calico_result.stdout"

# Verify cluster is running
- name: Wait for nodes to be ready
  shell: kubectl get nodes
  register: nodes_ready
  until: "'NotReady' not in nodes_ready.stdout"
  retries: 30
  delay: 10
  become: yes
  become_user: ubuntu
  changed_when: false
