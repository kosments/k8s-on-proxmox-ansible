- name: Clone base VM for {{ vm.name }}
  command: >
    qm clone 9000 {{ vm.id }}
    --name {{ vm.name }}
    --full true
    --storage local-lvm

- name: Resize disk for {{ vm.name }}
  command: >
    qm resize {{ vm.id }} scsi0 +10G

- name: Create snippets directory if it doesn't exist
  file:
    path: /var/lib/vz/snippets
    state: directory
    mode: '0755'

- name: Set cloud-init and network configuration for {{ vm.name }}
  command: >
    qm set {{ vm.id }}
    --ipconfig0 ip={{ vm.ip }}/24,gw=192.168.10.1
    --ciuser ubuntu
    --cipassword ubuntu
    --sshkeys ~/.ssh/id_rsa.pub
    --agent 1

- name: Create cloud-init user data file for SSH configuration
  copy:
    content: |
      #cloud-config
      users:
        - name: ubuntu
          sudo: ALL=(ALL) NOPASSWD:ALL
          shell: /bin/bash
          ssh_authorized_keys:
            - "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
      
      packages:
        - openssh-server
      
      runcmd:
        # SSH設定
        - systemctl enable ssh
        - systemctl start ssh
        - sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
        - sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
        
        # ファイアウォール設定
        - ufw default deny incoming
        - ufw default allow outgoing
        - ufw allow 22/tcp  # SSH
        - ufw allow 6443/tcp  # Kubernetes API server
        - ufw allow 10250/tcp  # Kubelet API
        - ufw allow 10255/tcp  # Read-only Kubelet API
        - ufw allow 10257/tcp  # kube-controller-manager
        - ufw allow 10259/tcp  # kube-scheduler
        - ufw allow 2379:2380/tcp  # etcd server client API
        - ufw allow 30000:32767/tcp  # NodePort Services
        - ufw allow 8472/udp  # Flannel VXLAN
        - ufw --force enable
        
        # サービス再起動
        - systemctl restart ssh
        - echo "SSH and firewall configuration completed" > /tmp/ssh-setup.log
    dest: "/var/lib/vz/snippets/user-data-{{ vm.name }}.yml"
    mode: '0644'

- name: Apply custom cloud-init user data
  command: >
    qm set {{ vm.id }} --cicustom "user=local:snippets/user-data-{{ vm.name }}.yml"

- name: Start VM {{ vm.name }}
  command: qm start {{ vm.id }}

- name: Wait for VM {{ vm.name }} to be ready
  wait_for:
    host: "{{ vm.ip }}"
    port: 22
    delay: 60
    timeout: 300
  ignore_errors: yes

- name: Additional wait and SSH test for {{ vm.name }}
  pause:
    seconds: 30

- name: Test SSH connectivity to {{ vm.name }}
  command: ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no ubuntu@{{ vm.ip }} "echo 'SSH test successful'"
  register: ssh_test
  retries: 5
  delay: 30
  until: ssh_test.rc == 0
  ignore_errors: yes
